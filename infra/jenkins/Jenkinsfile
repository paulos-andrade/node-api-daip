pipeline {
    agent any
    environment {
        DB_HOST = "${DB_HOST}"
        DB_NAME = "${DB_NAME}"
        DB_USER = "${DB_USER}"
        DB_PASSWORD = credentials('daip-db-password')
        DOCKERFILE_PATH = "${DOCKER_PATH}"
        IMAGE_NAME = "${IMAGE_NAME}"
        DOCKER_USERNAME = credentials('docker-username')
        DOCKER_PASSWORD = credentials('docker-password')

    }
    stages {
        stage('Checkout Code') {
            steps {
                echo 'Checking out code from Git repository...'
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    docker.image('node:18').inside {
                        echo 'Installing dependencies...'
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    docker.image('node:18').inside {
                        echo 'Running tests...'
                        sh 'npm test'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image...'
                    def image = docker.build("${IMAGE_NAME}:latest", "-f ${DOCKERFILE_PATH} .")
                    echo "Built image ID: ${image.id}"
                }
            }
        }

        stage('Docker Image Publish') {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
            steps {
                script {
                    echo 'Publishing Docker image...'
                    // Log in to Docker Hub
                    sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin"
                    // Push the image to the registry
                    sh "docker push ${DOCKER_IMAGE_NAME}"
                }
            }
          }
        }
    }
}